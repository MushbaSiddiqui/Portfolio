:root {
  --primary-color: #4A90E2;
  --secondary-color: #2C3E50;
  --accent-color: #E74C3C;
  --background-dark: #1E1E1E;
  --text-light: #FFFFFF;
  --text-dark: #2C3E50;
  --gradient-primary: linear-gradient(135deg, #4A90E2, #5E5AEC);
  --gradient-dark: linear-gradient(135deg, #2C3E50, #3A506B);
}

.home {
  flex: 1;
}

.hero {
  min-height: 100vh;
  display: flex;
  align-items: center;
  background: linear-gradient(
    135deg,
    var(--bg-primary) 0%,
    var(--bg-accent) 100%
  );
  position: relative;
  overflow: hidden;
}

.hero::before,
.hero::after {
  content: '';
  position: absolute;
  width: 800px;
  height: 800px;
  border-radius: 50%;
  background: var(--gradient-primary);
  opacity: 0.03;
  filter: blur(80px);
  animation: float 15s ease-in-out infinite alternate;
}

.hero::before {
  top: -300px;
  right: -200px;
}

.hero::after {
  bottom: -300px;
  left: -200px;
  animation-delay: -7s;
}

.hero-content {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 2rem;
  display: grid;
  grid-template-columns: 1.2fr 1fr;
  gap: 4rem;
  align-items: center;
  position: relative;
  z-index: 1;
}

.hero-text {
  position: relative;
}

.greeting {
  font-size: 1.1rem;
  color: var(--primary-color);
  margin-bottom: 1.5rem;
  display: inline-block;
  font-weight: 500;
  letter-spacing: 3px;
  text-transform: uppercase;
  opacity: 0;
  animation: slideInLeft 0.8s ease forwards;
  position: relative;
}

.greeting::after {
  content: '';
  position: absolute;
  left: 0;
  bottom: -8px;
  width: 40px;
  height: 3px;
  background: var(--gradient-primary);
  animation: expandWidth 0.8s ease forwards 0.8s;
}

.hero-text h1 {
  font-size: clamp(2.8rem, 5vw, 4rem);
  font-weight: 800;
  line-height: 1.1;
  margin-bottom: 1.2rem;
  background: var(--gradient-primary);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  opacity: 0;
  animation: fadeInUp 0.8s ease forwards 0.3s;
  position: relative;
  display: inline-block;
  white-space: nowrap;
}
.social-links a.linkedin i{
  color: #fcf0f0;
}

.social-links a.github i{
  color: #f1f4f5;
}
.hero-text h1::after {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  background: linear-gradient(90deg, 
    transparent 0%, 
    var(--bg-primary) 5%, 
    var(--bg-primary) 95%, 
    transparent 100%);
  animation: revealText 1s cubic-bezier(0.77, 0, 0.18, 1) forwards 0.5s;
}

.hero-text h2 {
  font-size: clamp(1.5rem, 2.5vw, 2rem);
  color: var(--text-secondary);
  font-weight: 500;
  margin-bottom: 2rem;
  opacity: 0;
  animation: fadeInUp 0.8s ease forwards 0.5s;
}

.hero-text p {
  font-size: clamp(1rem, 1.2vw, 1.1rem);
  color: var(--text-secondary);
  line-height: 1.8;
  margin-bottom: 2.5rem;
  max-width: 600px;
  opacity: 0;
  animation: fadeInUp 0.8s ease forwards 0.7s;
}

.code-block {
  background: rgba(255, 255, 255, 0.1);
  padding: 2rem;
  border-radius: 10px;
  font-family: 'Fira Code', monospace;
  position: relative;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(4px);
}

.code-block::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 30px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 10px 10px 0 0;
}

.code-block pre {
  margin: 0;
  color: #e0e0e0;
}

.code-block code {
  color: #4facfe;
}

.skills-section {
  padding: 6rem 0;
  background: var(--bg-secondary);
  position: relative;
}

.section-header {
  text-align: center;
  margin-bottom: 4rem;
}

.section-header h2 {
  font-size: 2.5rem;
  color: var(--text-primary);
  margin-bottom: 1rem;
  font-weight: 700;
}

.section-header p {
  color: var(--text-secondary);
  font-size: 1.1rem;
}

.skills-wrapper {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 2rem;
  padding: 0 1rem;
}

.skill-card {
  opacity: 0;
  animation: fadeInUp 0.5s ease forwards;
  animation-delay: var(--delay);
}

.skill-content {
  background: var(--bg-card);
  border-radius: 16px;
  padding: 2rem;
  box-shadow: var(--card-shadow);
  border: 1px solid var(--border-color);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

.skill-content::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 4px;
  height: 100%;
  background: var(--gradient-primary);
  transform: scaleY(0);
  transform-origin: top;
  transition: transform 0.3s ease;
}

.skill-content:hover {
  transform: translateY(-5px);
  box-shadow: var(--hover-shadow);
}

.skill-content:hover::before {
  transform: scaleY(1);
}

.skill-icon {
  width: 60px;
  height: 60px;
  background: var(--gradient-accent);
  border-radius: 12px;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 1.5rem;
  transition: all 0.3s ease;
}

.skill-icon i {
  font-size: 1.8rem;
  color: var(--text-white);
}

.skill-info h3 {
  color: var(--text-primary);
  font-size: 1.3rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
}

.skill-info p {
  color: var(--text-secondary);
  font-size: 0.95rem;
  margin-bottom: 1.2rem;
}

.skill-level {
  height: 6px;
  background: var(--bg-accent);
  border-radius: 3px;
  margin: 1rem 0;
  overflow: hidden;
}

.skill-progress {
  width: var(--level);
  height: 100%;
  background: var(--gradient-primary);
  border-radius: 3px;
  position: relative;
  animation: skillProgress 1.5s ease-out forwards;
}

.skill-percentage {
  position: absolute;
  right: 0;
  top: -25px;
  color: var(--primary-color);
  font-weight: 600;
  font-size: 0.9rem;
}

.skill-category {
  display: inline-block;
  padding: 0.4rem 1rem;
  background: var(--bg-accent);
  color: var(--primary-color);
  border-radius: 20px;
  font-size: 0.85rem;
  font-weight: 500;
}

/* Add different colors for different skill levels */
.skill-card[data-category="Learning"] .skill-category {
  background: #FEF3C7;
  color: #D97706;
}

.skill-card[data-category="Intermediate"] .skill-category {
  background: #E0E7FF;
  color: #4F46E5;
}

.skill-info p {
  color: var(--text-secondary);
  font-size: 0.9rem;
  margin-bottom: 1.2rem;
  line-height: 1.6;
}

/* Update progress bar colors based on level */
.skill-progress {
  background: linear-gradient(to right, 
    var(--primary-color) calc(var(--level) - 10%), 
    var(--accent-color) var(--level)
  );
  opacity: 0.8;
}

/* Add a learning badge for skills in progress */
.skill-card[data-category="Learning"]::after {
  content: 'ðŸŒ±';
  position: absolute;
  top: 1rem;
  right: 1rem;
  font-size: 1.2rem;
}

/* Update the section description */
.section-header p {
  color: var(--text-secondary);
  font-size: 1.1rem;
  max-width: 600px;
  margin: 0 auto;
  line-height: 1.6;
}

/* Add a note about current learning */
.skills-wrapper::after {
  content: 'ðŸŒ± Currently learning and growing through internship experience';
  display: block;
  text-align: center;
  color: var(--text-secondary);
  margin-top: 2rem;
  font-size: 0.9rem;
  font-style: italic;
}

@keyframes skillProgress {
  from { width: 0; }
  to { width: var(--level); }
}

@media (max-width: 768px) {
  .skills-wrapper {
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1.5rem;
  }

  .skill-content {
    padding: 1.5rem;
  }

  .skill-icon {
    width: 60px;
    height: 60px;
  }

  .skill-icon i {
    font-size: 1.5rem;
  }
}

.cta-buttons {
  display: flex;
  gap: 1.5rem;
  margin-bottom: 3rem;
  opacity: 0;
  animation: fadeInUp 0.8s ease forwards 0.9s;
}

.btn {
  border-radius: 6px;
  font-weight: 600;
  font-size: 1rem;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.8rem;
  min-width: 160px;
  transition: all 0.3s ease;
}

.btn.primary {
  
  padding: 0.5rem 0.5rem;
  background: var(--primary-color);
  color: white;
  box-shadow: 0 4px 15px rgba(124, 58, 237, 0.2);
}

.btn.secondary {
  background: transparent;
  border: 2px solid var(--primary-color);
  color: var(--primary-color);
}

.btn:hover {
  transform: translateY(-2px);
}

.btn.primary:hover {
  background: var(--secondary-color);
  box-shadow: 0 6px 20px rgba(124, 58, 237, 0.3);
}

.btn.secondary:hover {
  background: var(--bg-accent);
  border-color: var(--secondary-color);
  color: var(--secondary-color);
}

.social-links {
  display: flex;
  gap: 1.5rem;
  opacity: 0;
  animation: fadeInUp 0.8s ease forwards 1.1s;
}

.social-links a {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background: var(--bg-accent);
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--primary-color);
  font-size: 1.2rem;
  transition: all 0.3s ease;
}

.social-links a:hover {
  background: var(--primary-color);
  color: white;
  transform: translateY(-3px);
}

.blob-animation {
  position: absolute;
  width: 600px;
  height: 600px;
  background: radial-gradient(circle at center, var(--primary-color) 0%, transparent 70%);
  filter: blur(60px);
  opacity: 0.1;
  animation: blobFloat 10s ease-in-out infinite;
}

@keyframes blobFloat {
  0%, 100% {
    transform: translate(0, 0) scale(1);
  }
  50% {
    transform: translate(30px, -30px) scale(1.1);
  }
}

@media (max-width: 992px) {
  .hero-content {
    grid-template-columns: 1fr;
    text-align: center;
    gap: 3rem;
  }

  .greeting::after {
    left: 50%;
    transform: translateX(-50%);
  }

  .cta-buttons {
    justify-content: center;
  }

  .social-links {
    justify-content: center;
  }

  .hero-illustration {
    order: -1;
  }
}

@media (max-width: 768px) {
  .hero {
    padding: 6rem 0 4rem;
  }

  .cta-buttons {
    flex-direction: column;
    max-width: 300px;
    margin-left: auto;
    margin-right: auto;
  }

  .btn {
    width: 100%;
    text-align: center;
  }
}

.hero-illustration {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  opacity: 0;
  animation: fadeIn 1s ease forwards 0.8s;
}

.hero-illustration img {
  width: 100%;
  max-width: 500px;
  height: auto;
  animation: float 6s ease-in-out infinite;
  filter: drop-shadow(0 10px 20px rgba(0, 0, 0, 0.2));
}

.dev-illustration {
  width: 100%;
  max-width: 500px;
  height: auto;
  animation: float 6s ease-in-out infinite;
}

@keyframes float {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-20px);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-20px);
  }
}

/* Update progress bar colors for different levels */
.skill-card[data-category="Advanced"] .skill-progress {
  background: linear-gradient(to right, 
    var(--primary-color) calc(var(--level) - 5%), 
    var(--accent-color) var(--level)
  );
  opacity: 0.9;
}

.skill-card[data-category="Intermediate"] .skill-progress {
  background: linear-gradient(to right, 
    #4F46E5 calc(var(--level) - 5%), 
    #818CF8 var(--level)
  );
  opacity: 0.8;
}

/* Adjust responsive layout */
@media (max-width: 1200px) {
  .skills-wrapper {
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  }
}

@media (max-width: 768px) {
  .skills-wrapper {
    grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
    gap: 1.5rem;
  }
}

/* Add new animations */
@keyframes pulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes expandWidth {
  from {
    width: 0;
  }
  to {
    width: 40px;
  }
}

@keyframes typeWriter {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

@keyframes revealText {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(100%);
  }
} 